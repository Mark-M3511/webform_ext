<?php
  
//  _webform_ext_build_reservation_form
require_once(drupal_get_path('module', 'webform_ext'). '/includes/webform_ext_consts.inc'); 
require_once(drupal_get_path('module', 'webform_ext'). '/includes/webform_ext_funcs.inc');

function _webform_ext_reservation_form_1($form, &$form_state)
{
   $form = array();
   
   $default_pa = !empty($form_state['values']['select_num_rooms_pa']) ?
      $form_state['values']['select_num_rooms_pa'] : 0;
   
   $default_sa = !empty($form_state['values']['select_num_rooms_sa']) ?
      $form_state['values']['select_num_rooms_sa'] : 0;
   
   $d = new DateTime('now', new DateTimeZone(WEBFORM_EXT_DEFAULT_TIMEZONE));
   $d->modify(WEBFORM_EXT_MIN_DATE_FOR_RESERVATION);
   $arrival_date = !empty($form_state['values']['arrival_date']) ? $form_state['values']['arrival_date'] : $d->format('Y-m-d');
   
   $d->modify(WEBFORM_EXT_MIN_DATE_FOR_RESERVATION_2);
   $departure_date = !empty($form_state['values']['departure_date']) ? $form_state['values']['departure_date'] : $d->format('Y-m-d');
   
   $form['fs_availability_info'] = array(
     /* '#title' => t("Length of stay:"), */
	 '#title' => t("Step 1:"),
	 '#prefix' => '<div id="box">',
     '#suffix' => '</div>', 
     '#type' => 'fieldset',
   );
   
   $form['fs_availability_info']['arrival_date'] = array(
      '#title' => t('Arrival Date'),
      '#type' => 'date_popup',
	  '#default_value' => $arrival_date,
	  '#date_format' => 'Y-m-d',
	  '#prefix' => '<div id="edit-arrival-date-container">',
      '#suffix' => '</div>',
   );
   
   $form['fs_availability_info']['departure_date'] = array(
      '#title' => t('Departure Date'),
      '#type' => 'date_popup',  
	  '#default_value' => $departure_date,
	  '#date_format' => 'Y-m-d',
	  '#prefix' => '<div id="edit-departure-date-container">',
      '#suffix' => '</div>',
   );  
   
   $form['fs_availability_info']['check_availability_msg'] = array(
      '#type' => 'markup', 
	  '#markup' => "<ol><li>Enter 'Arrival' and 'Departure' dates (Step 1).</li><li>Click <span style=\"font-weight: bold;\">'Check Availability'</span> to retrieve up-to-date room availability information (Step 1).</li><li>Select number of rooms with private and/or shared baths that you wish to reserve (Step 2)</li><li>Check a room to include it in your reservation. Uncheck a room to exclude it (Step 3A/3B).</li><li>Indicate number and types of guests for each room (Step 3A/3B).</li><li>Click <span style=\"font-weight: bold;\">'Reserve Now'</span> to proceed to payment steps</li></ol>",      
	  '#prefix' => '<div id="check-availability-msg">',
      '#suffix' => '</div>',
   );
      
   $form['fs_availability_info']['check_availability'] = array(
      '#type' => 'submit',
	  '#name' => 'ca',
	  /* '#name' => 'submit_ca', */
	  '#executes_submit_callback' => FALSE,
      '#ajax' => array(
         'callback' => 'ajax_load_available_rooms_callback',
		 'wrapper' => 'box-msg',
         'name' => 'submit_ca',		 
       ),
      '#value' => t('Check Availability'),
	  '#prefix' => '<div id="check-availability">',
      '#suffix' => '</div>',
   );
   
   $form['fs_rooms'] = array(
     /* '#title' => t("Select number of rooms to reserve:"), */
	 '#title' => t("Step 2:"),
	 '#prefix' => '<div id="rooms-div">',
     '#suffix' => '</div>',
     '#type' => 'fieldset',
   ); 
   
   /* error_log("Res Form: \$arrival_date = {$arrival_date} | \$departure_date = {$departure_date}");*/
   _query_num_rooms_available($arrival_date, $departure_date);
   
   $form['fs_rooms']['box_msg'] = array(
	  '#markup' => _get_availability_msg(),
      '#type' => 'markup', 
	  '#prefix' => '<div id="box-msg">',
      '#suffix' => '</div>',
   );
   
   $room_options_pa = array();   
   for ($ctr = 1; $ctr <= $_SESSION['num_rooms_available_pa']; $ctr++){	  
	   $room_options_pa[$ctr] = $ctr;
   }
   
   $form['fs_rooms']['select_num_rooms_pa'] = array(
	 '#title' => t('Number to reserve:'),
     '#type' => 'select',
	 '#options' => $room_options_pa,
     '#default_value' => $default_pa,
	 '#prefix' => '<div id="rooms-select-pa">',
     '#suffix' => '</div>',
     '#ajax' => array(
         'callback' => 'ajax_rooms_checkboxes_callback_pa',
         'wrapper' => 'rooms-div-pa',		
         'effect' => 'slide',
         'progress' => array('type' => 'throbber', 'speed' => 'slow'),
     ),
   );    
   
   $room_options_sa = array();
   //for ($ctr = 1; $ctr <= $_SESSION['num_rooms_available_sa']; $ctr++){
   for ($ctr = 0; $ctr <= $_SESSION['num_rooms_available_sa']; $ctr++){
	   $room_options_sa[$ctr] = $ctr;
   }
   
   $form['fs_rooms']['select_num_rooms_sa'] = array(
	 '#title' => t('Number to reserve:'),
     '#type' => 'select',
	 '#options' => $room_options_sa,
     '#default_value' => $default_sa,
	 '#prefix' => '<div id="rooms-select-sa">',
     '#suffix' => '</div>',
     '#ajax' => array(
         'callback' => 'ajax_rooms_checkboxes_callback_sa',
         'wrapper' => 'rooms-div-sa',		
         'effect' => 'slide',
         'progress' => array('type' => 'throbber', 'speed' => 'slow'),
     ),
   ); 
   
   $form['fs_rooms_pa'] = array(
     '#type' => 'fieldset', 
     /* '#title' => t("Rooms with Private Baths:"), */
	 '#title' => t("Step 3A - Rooms with Private Baths:"),
	 '#description' => t(WEBFORM_EXT_CHECKED_ROOMS_MSG),
	 '#prefix' => '<div id="rooms-div-pa">',
     '#suffix' => '</div>',     
   ); 
   
   $num_rooms_pa = !empty($form_state['values']['select_num_rooms_pa']) ?
      $form_state['values']['select_num_rooms_pa'] : 0;
   if ($num_rooms_pa == 0 && $_SESSION['num_rooms_available_pa'] > 0){ 	  
	  $num_rooms_pa = 1;  
   }
   $is_checked = 1;
   /* $is_checked = 0;
   if (!empty($form_state['values']['select_num_rooms_pa']) && $form_state['values']['select_num_rooms_pa'] > 1){
	   $is_checked = 1; 	  
   } */
   for ($i = 1; $i <= $num_rooms_pa; $i++) {
      $form['fs_rooms_pa']["room_num_pa_$i"] = array(	  
	    '#type' => 'hidden', 
	    '#default_value' => $_SESSION['room_ids_pa'][$i-1]['rid'], 
      );
      $form['fs_rooms_pa']["checkbox_room_pa_$i"] = array(
        '#type' => 'checkbox',
		'#title' => "Room $i",
	    /* '#default_value' => 0, */
		'#default_value' => (int)$is_checked,
      );
	  $form['fs_rooms_pa']["num_adults_pa_$i"] = array(
        '#type' => 'select',
        '#title' => "Adults/Guests (9 years or older):",
	    '#options' => array(1 => 1, 2, 3, 4,),
      );
	  $form['fs_rooms_pa']["num_children_pa_$i"] = array(
        '#type' => 'select',
        '#title' => "Guests (8 years or younger):",
	    '#options' => array(0, 1, 2, 3, 4,),
      );	 
   }
   
   $form['fs_rooms_sa'] = array(
     '#type' => 'fieldset', 
     /* '#title' => t("Rooms with Shared Baths:"), */
	 '#title' => t("Step 3B - Rooms with Shared Baths:"),
	 '#description' => t(WEBFORM_EXT_CHECKED_ROOMS_MSG),
	 '#prefix' => '<div id="rooms-div-sa">',
     '#suffix' => '</div>',     
   ); 

   $num_rooms_sa = !empty($form_state['values']['select_num_rooms_sa']) ?
      $form_state['values']['select_num_rooms_sa'] : 0;	  
   if ($num_rooms_sa == 0 && $_SESSION['num_rooms_available_sa'] > 0){ 	  
	  /* $num_rooms_sa = 1;  */ 
	  $num_rooms_sa = 0; 
   }  
   /* $is_checked = ($num_rooms_sa > 1 ? 1 : 0); */
   $is_checked = 1;
   for ($i = 1; $i <= $num_rooms_sa; $i++) {    
	  $form['fs_rooms_sa']["room_num_sa_$i"] = array(	  
	    '#type' => 'hidden', 
	    '#default_value' => $_SESSION['room_ids_sa'][$i-1]['rid'], 
      );
      $form['fs_rooms_sa']["checkbox_room_sa_$i"] = array(
        '#type' => 'checkbox',
		'#title' => "Room $i",
	    /* '#default_value' => 0, */
		'#default_value' => (int)$is_checked,
      );
	  $form['fs_rooms_sa']["num_adults_sa_$i"] = array(
        '#type' => 'select',
        '#title' => "Adults/Guests (9 years or older):",
	    '#options' => array(1 => 1, 2, 3, 4,),
      );
	  $form['fs_rooms_sa']["num_children_sa_$i"] = array(
        '#type' => 'select',
        '#title' => "Guests (8 years or younger):",
	    '#options' => array(0, 1, 2, 3, 4,),
      );	 
   }
   
   $form['submit'] = array(
      '#type' => 'submit',
      '#value' => t('Reserve Now'),
	  '#weight' => 99,
    );
   
   return $form;
}

/*
*  Ajax call back
*/
function ajax_rooms_checkboxes_callback_pa($form, $form_state) {
   return $form['fs_rooms_pa'];
}

function ajax_rooms_checkboxes_callback_sa($form, $form_state) {
   return $form['fs_rooms_sa'];
}

 
function ajax_load_available_rooms_callback($form, $form_state)
{
   $arrival_date = $form_state['values']['arrival_date'];
   $departure_date = $form_state['values']['departure_date'];
   $commands = array();
     
   //_query_num_rooms_available($arrival_date, $departure_date);
    
   $selector = "#box-msg";   
   $element = $form['fs_rooms']['box_msg'];
   $element['#markup'] = _get_availability_msg();
   $commands[] = ajax_command_replace($selector, render($element));
   
   $selector = "#rooms-select-pa";
   $element = $form['fs_rooms']['select_num_rooms_pa'];
   $commands[] = ajax_command_replace($selector, render($element));
   
   $selector = "#rooms-select-sa";
   $element = $form['fs_rooms']['select_num_rooms_sa'];
   $commands[] = ajax_command_replace($selector, render($element));   
   
   $selector = "#rooms-div-pa";
   $element = $form['fs_rooms_pa'];
   $commands[] = ajax_command_replace($selector, render($element));
   
   $selector = "#rooms-div-sa";
   $element = $form['fs_rooms_sa'];
   $commands[] = ajax_command_replace($selector, render($element));
   
   $form['#type'] = 'ajax';
   $form['#commands'] = $commands;
   
   return $form;
   
}

function _get_availability_msg()
{
   $msg = '<div id="count-pa"><span class="small-caption">Private Bath</span><br /><span>'. $_SESSION['num_rooms_available_pa']. '</span><br /><span class="small-caption">Available</span></div>';
   
   $msg .= '<div id="count-sa"><span class="small-caption">Shared Bath</span><br /><span>'. $_SESSION['num_rooms_available_sa']. '</span><br /><span class="small-caption">Available</span></div>';
   
   return $msg;
}

function _webform_ext_reservation_form_1_validate($form, $form_state) {   
   try{
      //dpm($form);
      //dpm($form_state);
	  
      // only perform validation if triggered by "Reservation submit" control
      if ($form_state['triggering_element']['#value'] != WEBFORM_EXT_FORM_SUBMIT_BTN_CAPTION){
	     return;
	  }
	  
      $errors = array();	  
      /*  _webform_ext_reservation_form_1_calculate($form, &$form_state, &$errors); */
	  
      $good_dates_1 = (strtotime($form_state['values']['arrival_date']) < strtotime($form_state['values']['departure_date']));
      if (!$good_dates_1){
	     $errors['date_error_1'] = t("Planned 'Arrival Date'  must be earlier than 'Departure Date'");
      }
	  
	  $today = mktime(0, 0, 0);
	  $good_dates_2 = (strtotime($form_state['values']['arrival_date']) >= strtotime(WEBFORM_EXT_MIN_DATE_FOR_RESERVATION, $today));
	  if (!$good_dates_2){
         $errors['date_error_2'] = t("Planned 'Arrival Date' should not be earlier than: ". date('Y-F-d', strtotime(WEBFORM_EXT_MIN_DATE_FOR_RESERVATION)));
      }
	  
	  $good_dates_4 = (strtotime($form_state['values']['departure_date']) - strtotime($form_state['values']['arrival_date']) <= 365 * DAY_IN_SECS);
	  if (!$good_dates_4){
         $errors['date_error_4'] = t("Planned 'Departure Date' should not be more than 1 year from 'Arrival Date'.");
      }
	  
	  $good_dates_5 = (strtotime($form_state['values']['arrival_date']) <= strtotime('+1 year', $today) && strtotime($form_state['values']['departure_date']) <= strtotime('+1 year', $today));	  
      if (!$good_dates_5){
         $errors['date_error_5'] = t("Planned 'Arrival' and 'Departure' dates must be within 1 year of today.");
      }
	  
	  if (!$errors){
		 _webform_ext_reservation_form_1_calculate($form, &$form_state, &$errors);
		 $price_non_zero = ($_SESSION['order_total'] > 0);	
		 $num_guests_non_zero = ($_SESSION['num_guests'] > 0);
		 if (!$price_non_zero || !$num_guests_non_zero){
			$errors['zero_guests_or_price'] = t('Please select at least 1 room and a time span of at least 1 night.');
		 }
	  }	 
	  
	 /*  $price_non_zero = ($_SESSION['order_total'] > 0);	
      $num_guests_non_zero = ($_SESSION['num_guests'] > 0);	  */ 	  
   }catch(Exception $ex){
      $good_dates_3 = FALSE;
      watchdog(WEBFORM_EXT_MODULE_NAME,  t($ex->getMessage()), array(), WATCHDOG_ERROR);	  
   }   

   $good_dates_3 = TRUE;
   if (!$good_dates_3){
      $errors['date_error_3'] = t('Valid date format is: YYYY-MM-DD e.g. '. date('Y-m-d'));
   }      
   
   /* if (!$price_non_zero || !$num_guests_non_zero){
      $errors['zero_guests_or_price'] = t('Please select at least 1 room and a time span of at least 1 night.');
   } */
   
   if (count($errors)){
      foreach($errors as $key => $value){
	     form_set_error($key, $value);
	  }
   }
	
   $error_msgs = form_get_errors();
   drupal_add_js(array('we_errors_list' => array('error_msgs' => $error_msgs)), 'setting');
}

function _webform_ext_reservation_form_1_submit($form, &$form_state) {
   $_SESSION['billing_info'] = _webform_ext_reservation_billing_info($form, &$form_state);   
   $msg = WEBFORM_EXT_RES_SUCCESS_MSG_1;
   $protocol = IS_SSL ? HTTPS : HTTP; 
   drupal_goto($protocol. WEBFORM_EXT_HOST. '/'. WEBFORM_EXT_PAYMENT_PATH_ALIAS);
}

function _webform_ext_reservation_billing_info($form, $form_state)
{
   $protocol = (IS_SSL ? HTTPS : HTTP);
   
   $serverName = $_SERVER['SERVER_NAME'];
   $serverPort = $_SERVER['SERVER_PORT'];
   $url = $protocol. WEBFORM_EXT_HOST;
   
   $billing = new StdClass();   
   $billing->ItemName = format_string(WEBFORM_EXT_PP_ITEM_NAME, array('@num_guests' => $_SESSION['num_guests'], '@num_rooms' => count($_SESSION['reservation_room_picks']),'@from' =>  $form_state['values']['arrival_date'], '@to' => $form_state['values']['departure_date'], '@amount' => number_format($_SESSION['order_total'], 2),));
   
   $billing->ReturnURL = $url .'/'. WEBFORM_EXT_NOTIFICATION_SUCCESS_PAGE;
   $billing->NotifyURL = $protocol .$serverName.':'.$serverPort . WEBFORM_EXT_PP_NOTIFY_URL_FRAGMENT;;
   $billing->CancelUrl = $url .'/'. WEBFORM_EXT_PAYMENT_PATH_ALIAS;
   $billing->RegisteredBusinessEmail = (WEBFORM_EXT_TEST_PP_USE_SANDBOX ? WEBFORM_EXT_PP_BUSINESS_TEST : WEBFORM_EXT_PP_BUSINESS);
   $billing->OrderTotal = $_SESSION['order_total'];
   $billing->CurrencyCode = WEBFORM_EXT_PP_TRANSACTION_CURRENCY;
   
   return $billing;
}

function _webform_ext_reservation_form_1_calculate($form, $form_state, &$errors){  
   // bof: initialize session variables  
   $_SESSION['reservation_room_picks'] = array();
   $_SESSION['order_total'] = 0;
   $_SESSION['num_guests'] = 0;
   $_SESSION['rates'] = _get_current_rates();
   // eof: initialize session variables
   //print_r($_SESSION['rates']);
   $room_options = array('Private Bath' => 'pa', 'Shared Bath' => 'sa');
   
   $order_total = 0;
   $num_guests = 0;
   
   foreach($room_options as $key => $suffix){
	  for ($ctr = 1; isset($_SESSION["num_rooms_available_{$suffix}"]) && $ctr <= $_SESSION["num_rooms_available_{$suffix}"]; $ctr++){	  
	      $is_checked = isset($form_state['values']["checkbox_room_{$suffix}_{$ctr}"]); 
	      $is_checked = ($is_checked && $form_state['values']["checkbox_room_{$suffix}_{$ctr}"]);
	      if ($is_checked){
	   	     $res = _webform_ext_reservation_form_1_init_res($suffix, $form_state, $ctr);
	         $_SESSION['reservation_room_picks'][] = $res;	      
	         $res->LineTotal = _calculate_sub_total($res->ArrivalDate, $res->DepartureDate, $res->NumGuestsPaying, $res->DailyRate, $res->DailyRateExtra);
	   	     $order_total += $res->LineTotal;
	   	     $num_guests += $res->NumGuests;
	   	     $res->RoomNumber = $form_state['values']["room_num_{$suffix}_{$ctr}"];
	   	     if ($res->TooManyGuests){
	               $errors["room$ctr"] = t("Room $ctr with [$key] has exceeded the maximum number of 4 allowed guests");
	         }
	      }	  
      }  	  
   }
	
   $_SESSION['order_total'] = (WEBFORM_EXT_TEST_ORDER_AMT_1_00 ? 1 : $order_total);	
   $_SESSION['num_guests'] = $num_guests;

   return $order_total;
}

function _webform_ext_reservation_form_1_init_res($suffix, $form_state, $ctr){
   $res = new StdClass();  
   $res->ArrivalDate = $form_state['values']['arrival_date'];
   $res->DepartureDate = $form_state['values']['departure_date'];
   $res->NumGuestsPaying = (int)$form_state['values']["num_adults_{$suffix}_{$ctr}"];
   $res->NumGuests = (int)$form_state['values']["num_adults_{$suffix}_{$ctr}"] + (int)$form_state['values']["num_children_{$suffix}_{$ctr}"];
   /* $res->DailyRate = VPGH_DAILY_RATE;
   $res->DailyRateExtra = VPGH_DAILY_RATE_EXTRA; */
   $res->DailyRate = $_SESSION['rates']['rate'];
   $res->DailyRateExtra = $_SESSION['rates']['rate_extra'];
   $res->PrivateAmenities = 0; 
   $res->LineTotal = 0;
   $res->TooManyGuests = ($res->NumGuests > 4); 
   $res->RoomType = '';
   $res->RoomNumber = 0;
   return $res;
}